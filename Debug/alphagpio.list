
alphagpio.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000130  08000000  08000000  00001000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         000004f4  08000130  08000130  00001130  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000000  08000624  08000624  00002040  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .ARM.extab    00000000  08000624  08000624  00002040  2**0
                  CONTENTS
  4 .ARM          00000000  08000624  08000624  00002040  2**0
                  CONTENTS
  5 .preinit_array 00000000  08000624  08000624  00002040  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08000624  08000624  00001624  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .fini_array   00000004  08000628  08000628  00001628  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  8 .data         00000040  20000000  0800062c  00002000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          0000001c  20000040  0800066c  00002040  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  2000005c  0800066c  0000205c  2**0
                  ALLOC
 11 .ARM.attributes 00000029  00000000  00000000  00002040  2**0
                  CONTENTS, READONLY
 12 .debug_info   0000089a  00000000  00000000  00002069  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 0000027f  00000000  00000000  00002903  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 000000a8  00000000  00000000  00002b88  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_rnglists 00000073  00000000  00000000  00002c30  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  000017cc  00000000  00000000  00002ca3  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   00000e40  00000000  00000000  0000446f  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    0000690e  00000000  00000000  000052af  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000043  00000000  00000000  0000bbbd  2**0
                  CONTENTS, READONLY
 20 .debug_frame  000001c8  00000000  00000000  0000bc00  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_line_str 00000060  00000000  00000000  0000bdc8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

08000130 <__do_global_dtors_aux>:
 8000130:	b510      	push	{r4, lr}
 8000132:	4c05      	ldr	r4, [pc, #20]	@ (8000148 <__do_global_dtors_aux+0x18>)
 8000134:	7823      	ldrb	r3, [r4, #0]
 8000136:	b933      	cbnz	r3, 8000146 <__do_global_dtors_aux+0x16>
 8000138:	4b04      	ldr	r3, [pc, #16]	@ (800014c <__do_global_dtors_aux+0x1c>)
 800013a:	b113      	cbz	r3, 8000142 <__do_global_dtors_aux+0x12>
 800013c:	4804      	ldr	r0, [pc, #16]	@ (8000150 <__do_global_dtors_aux+0x20>)
 800013e:	f3af 8000 	nop.w
 8000142:	2301      	movs	r3, #1
 8000144:	7023      	strb	r3, [r4, #0]
 8000146:	bd10      	pop	{r4, pc}
 8000148:	20000040 	.word	0x20000040
 800014c:	00000000 	.word	0x00000000
 8000150:	0800060c 	.word	0x0800060c

08000154 <frame_dummy>:
 8000154:	b508      	push	{r3, lr}
 8000156:	4b03      	ldr	r3, [pc, #12]	@ (8000164 <frame_dummy+0x10>)
 8000158:	b11b      	cbz	r3, 8000162 <frame_dummy+0xe>
 800015a:	4903      	ldr	r1, [pc, #12]	@ (8000168 <frame_dummy+0x14>)
 800015c:	4803      	ldr	r0, [pc, #12]	@ (800016c <frame_dummy+0x18>)
 800015e:	f3af 8000 	nop.w
 8000162:	bd08      	pop	{r3, pc}
 8000164:	00000000 	.word	0x00000000
 8000168:	20000044 	.word	0x20000044
 800016c:	0800060c 	.word	0x0800060c

08000170 <gpio_init>:

#include "../Inc/GPIO_Driver.h"

void gpio_init(GPIO_PinConfig_t *pGPIOx, uint8_t EnOrDi)

{
 8000170:	b580      	push	{r7, lr}
 8000172:	b082      	sub	sp, #8
 8000174:	af00      	add	r7, sp, #0
 8000176:	6078      	str	r0, [r7, #4]
 8000178:	460b      	mov	r3, r1
 800017a:	70fb      	strb	r3, [r7, #3]
	if(EnOrDi == ENABLE)
 800017c:	78fb      	ldrb	r3, [r7, #3]
 800017e:	2b01      	cmp	r3, #1
 8000180:	d136      	bne.n	80001f0 <gpio_init+0x80>
	{
		if(pGPIOx==GPIOA)
 8000182:	687b      	ldr	r3, [r7, #4]
 8000184:	4a42      	ldr	r2, [pc, #264]	@ (8000290 <gpio_init+0x120>)
 8000186:	4293      	cmp	r3, r2
 8000188:	d106      	bne.n	8000198 <gpio_init+0x28>
		{
			GPIOA_Clk_En();
 800018a:	4b42      	ldr	r3, [pc, #264]	@ (8000294 <gpio_init+0x124>)
 800018c:	699b      	ldr	r3, [r3, #24]
 800018e:	4a41      	ldr	r2, [pc, #260]	@ (8000294 <gpio_init+0x124>)
 8000190:	f043 0304 	orr.w	r3, r3, #4
 8000194:	6193      	str	r3, [r2, #24]
 8000196:	e061      	b.n	800025c <gpio_init+0xec>
		}
		else if(pGPIOx==GPIOB)
 8000198:	687b      	ldr	r3, [r7, #4]
 800019a:	4a3f      	ldr	r2, [pc, #252]	@ (8000298 <gpio_init+0x128>)
 800019c:	4293      	cmp	r3, r2
 800019e:	d106      	bne.n	80001ae <gpio_init+0x3e>
				{
				GPIOB_Clk_En();
 80001a0:	4b3c      	ldr	r3, [pc, #240]	@ (8000294 <gpio_init+0x124>)
 80001a2:	699b      	ldr	r3, [r3, #24]
 80001a4:	4a3b      	ldr	r2, [pc, #236]	@ (8000294 <gpio_init+0x124>)
 80001a6:	f043 0308 	orr.w	r3, r3, #8
 80001aa:	6193      	str	r3, [r2, #24]
 80001ac:	e056      	b.n	800025c <gpio_init+0xec>
				}
		else if(pGPIOx==GPIOC)
 80001ae:	687b      	ldr	r3, [r7, #4]
 80001b0:	4a3a      	ldr	r2, [pc, #232]	@ (800029c <gpio_init+0x12c>)
 80001b2:	4293      	cmp	r3, r2
 80001b4:	d106      	bne.n	80001c4 <gpio_init+0x54>
				{
			GPIOC_Clk_En();
 80001b6:	4b37      	ldr	r3, [pc, #220]	@ (8000294 <gpio_init+0x124>)
 80001b8:	699b      	ldr	r3, [r3, #24]
 80001ba:	4a36      	ldr	r2, [pc, #216]	@ (8000294 <gpio_init+0x124>)
 80001bc:	f043 0310 	orr.w	r3, r3, #16
 80001c0:	6193      	str	r3, [r2, #24]
 80001c2:	e04b      	b.n	800025c <gpio_init+0xec>
				}
		else if(pGPIOx==GPIOD)
 80001c4:	687b      	ldr	r3, [r7, #4]
 80001c6:	4a36      	ldr	r2, [pc, #216]	@ (80002a0 <gpio_init+0x130>)
 80001c8:	4293      	cmp	r3, r2
 80001ca:	d106      	bne.n	80001da <gpio_init+0x6a>
				{
			GPIOD_Clk_En();
 80001cc:	4b31      	ldr	r3, [pc, #196]	@ (8000294 <gpio_init+0x124>)
 80001ce:	699b      	ldr	r3, [r3, #24]
 80001d0:	4a30      	ldr	r2, [pc, #192]	@ (8000294 <gpio_init+0x124>)
 80001d2:	f043 0320 	orr.w	r3, r3, #32
 80001d6:	6193      	str	r3, [r2, #24]
 80001d8:	e040      	b.n	800025c <gpio_init+0xec>
				}
		else if(pGPIOx==GPIOE)
 80001da:	687b      	ldr	r3, [r7, #4]
 80001dc:	4a31      	ldr	r2, [pc, #196]	@ (80002a4 <gpio_init+0x134>)
 80001de:	4293      	cmp	r3, r2
 80001e0:	d13c      	bne.n	800025c <gpio_init+0xec>
				{
			GPIOE_Clk_En();
 80001e2:	4b2c      	ldr	r3, [pc, #176]	@ (8000294 <gpio_init+0x124>)
 80001e4:	699b      	ldr	r3, [r3, #24]
 80001e6:	4a2b      	ldr	r2, [pc, #172]	@ (8000294 <gpio_init+0x124>)
 80001e8:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 80001ec:	6193      	str	r3, [r2, #24]
 80001ee:	e035      	b.n	800025c <gpio_init+0xec>
				}

	}
	else
	{
		if(pGPIOx==GPIOA)
 80001f0:	687b      	ldr	r3, [r7, #4]
 80001f2:	4a27      	ldr	r2, [pc, #156]	@ (8000290 <gpio_init+0x120>)
 80001f4:	4293      	cmp	r3, r2
 80001f6:	d106      	bne.n	8000206 <gpio_init+0x96>
				{
					GPIOA_Clk_Di();
 80001f8:	4b26      	ldr	r3, [pc, #152]	@ (8000294 <gpio_init+0x124>)
 80001fa:	699b      	ldr	r3, [r3, #24]
 80001fc:	4a25      	ldr	r2, [pc, #148]	@ (8000294 <gpio_init+0x124>)
 80001fe:	f023 0304 	bic.w	r3, r3, #4
 8000202:	6193      	str	r3, [r2, #24]
 8000204:	e02a      	b.n	800025c <gpio_init+0xec>
				}
				else if(pGPIOx==GPIOB)
 8000206:	687b      	ldr	r3, [r7, #4]
 8000208:	4a23      	ldr	r2, [pc, #140]	@ (8000298 <gpio_init+0x128>)
 800020a:	4293      	cmp	r3, r2
 800020c:	d106      	bne.n	800021c <gpio_init+0xac>
						{
						GPIOB_Clk_Di();
 800020e:	4b21      	ldr	r3, [pc, #132]	@ (8000294 <gpio_init+0x124>)
 8000210:	699b      	ldr	r3, [r3, #24]
 8000212:	4a20      	ldr	r2, [pc, #128]	@ (8000294 <gpio_init+0x124>)
 8000214:	f023 0308 	bic.w	r3, r3, #8
 8000218:	6193      	str	r3, [r2, #24]
 800021a:	e01f      	b.n	800025c <gpio_init+0xec>
						}
				else if(pGPIOx==GPIOC)
 800021c:	687b      	ldr	r3, [r7, #4]
 800021e:	4a1f      	ldr	r2, [pc, #124]	@ (800029c <gpio_init+0x12c>)
 8000220:	4293      	cmp	r3, r2
 8000222:	d106      	bne.n	8000232 <gpio_init+0xc2>
						{
					GPIOC_Clk_Di();
 8000224:	4b1b      	ldr	r3, [pc, #108]	@ (8000294 <gpio_init+0x124>)
 8000226:	699b      	ldr	r3, [r3, #24]
 8000228:	4a1a      	ldr	r2, [pc, #104]	@ (8000294 <gpio_init+0x124>)
 800022a:	f023 0310 	bic.w	r3, r3, #16
 800022e:	6193      	str	r3, [r2, #24]
 8000230:	e014      	b.n	800025c <gpio_init+0xec>
						}
				else if(pGPIOx==GPIOD)
 8000232:	687b      	ldr	r3, [r7, #4]
 8000234:	4a1a      	ldr	r2, [pc, #104]	@ (80002a0 <gpio_init+0x130>)
 8000236:	4293      	cmp	r3, r2
 8000238:	d106      	bne.n	8000248 <gpio_init+0xd8>
						{
					GPIOD_Clk_Di();
 800023a:	4b16      	ldr	r3, [pc, #88]	@ (8000294 <gpio_init+0x124>)
 800023c:	699b      	ldr	r3, [r3, #24]
 800023e:	4a15      	ldr	r2, [pc, #84]	@ (8000294 <gpio_init+0x124>)
 8000240:	f023 0320 	bic.w	r3, r3, #32
 8000244:	6193      	str	r3, [r2, #24]
 8000246:	e009      	b.n	800025c <gpio_init+0xec>
						}
				else if(pGPIOx==GPIOE)
 8000248:	687b      	ldr	r3, [r7, #4]
 800024a:	4a16      	ldr	r2, [pc, #88]	@ (80002a4 <gpio_init+0x134>)
 800024c:	4293      	cmp	r3, r2
 800024e:	d105      	bne.n	800025c <gpio_init+0xec>
						{
					GPIOE_Clk_Di();
 8000250:	4b10      	ldr	r3, [pc, #64]	@ (8000294 <gpio_init+0x124>)
 8000252:	699b      	ldr	r3, [r3, #24]
 8000254:	4a0f      	ldr	r2, [pc, #60]	@ (8000294 <gpio_init+0x124>)
 8000256:	f023 0340 	bic.w	r3, r3, #64	@ 0x40
 800025a:	6193      	str	r3, [r2, #24]
						}

	}
	gpio_config_pin(pGPIOx->port, pGPIOx->pin, pGPIOx->mode);
 800025c:	687b      	ldr	r3, [r7, #4]
 800025e:	681b      	ldr	r3, [r3, #0]
 8000260:	4618      	mov	r0, r3
 8000262:	687b      	ldr	r3, [r7, #4]
 8000264:	6859      	ldr	r1, [r3, #4]
 8000266:	687b      	ldr	r3, [r7, #4]
 8000268:	689b      	ldr	r3, [r3, #8]
 800026a:	461a      	mov	r2, r3
 800026c:	f000 f81c 	bl	80002a8 <gpio_config_pin>
	gpio_config_pin_speed(pGPIOx->port, pGPIOx->pin, pGPIOx->speed, pGPIOx->mode);
 8000270:	687b      	ldr	r3, [r7, #4]
 8000272:	681b      	ldr	r3, [r3, #0]
 8000274:	4618      	mov	r0, r3
 8000276:	687b      	ldr	r3, [r7, #4]
 8000278:	6859      	ldr	r1, [r3, #4]
 800027a:	687b      	ldr	r3, [r7, #4]
 800027c:	695a      	ldr	r2, [r3, #20]
 800027e:	687b      	ldr	r3, [r7, #4]
 8000280:	689b      	ldr	r3, [r3, #8]
 8000282:	f000 f909 	bl	8000498 <gpio_config_pin_speed>


}
 8000286:	bf00      	nop
 8000288:	3708      	adds	r7, #8
 800028a:	46bd      	mov	sp, r7
 800028c:	bd80      	pop	{r7, pc}
 800028e:	bf00      	nop
 8000290:	40010800 	.word	0x40010800
 8000294:	40020000 	.word	0x40020000
 8000298:	40010c00 	.word	0x40010c00
 800029c:	40011000 	.word	0x40011000
 80002a0:	40011400 	.word	0x40011400
 80002a4:	40011800 	.word	0x40011800

080002a8 <gpio_config_pin>:
  (0x14), //pin13
  (0x18), //pin14
  (0x1C)  //pin15
};
void gpio_config_pin(GPIO_RegDef_t *pGPIOx, uint32_t pinNumber, uint32_t mode_type)
{
 80002a8:	b480      	push	{r7}
 80002aa:	b085      	sub	sp, #20
 80002ac:	af00      	add	r7, sp, #0
 80002ae:	60f8      	str	r0, [r7, #12]
 80002b0:	60b9      	str	r1, [r7, #8]
 80002b2:	607a      	str	r2, [r7, #4]
	if(pinNumber>7)
 80002b4:	68bb      	ldr	r3, [r7, #8]
 80002b6:	2b07      	cmp	r3, #7
 80002b8:	d973      	bls.n	80003a2 <gpio_config_pin+0xfa>
	{
		switch(mode_type){
 80002ba:	687b      	ldr	r3, [r7, #4]
 80002bc:	2b03      	cmp	r3, #3
 80002be:	f200 80e4 	bhi.w	800048a <gpio_config_pin+0x1e2>
 80002c2:	a201      	add	r2, pc, #4	@ (adr r2, 80002c8 <gpio_config_pin+0x20>)
 80002c4:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 80002c8:	080002d9 	.word	0x080002d9
 80002cc:	08000307 	.word	0x08000307
 80002d0:	0800033f 	.word	0x0800033f
 80002d4:	08000377 	.word	0x08000377
		   case GPIO_PUPD | GPIO_ANALOGMODE:
		    pGPIOx->CRH &= ~((1 << CNF_POS_BIT1) | (1<<CNF_POS_BIT2));
 80002d8:	68fb      	ldr	r3, [r7, #12]
 80002da:	685b      	ldr	r3, [r3, #4]
 80002dc:	496d      	ldr	r1, [pc, #436]	@ (8000494 <gpio_config_pin+0x1ec>)
 80002de:	68ba      	ldr	r2, [r7, #8]
 80002e0:	f851 2022 	ldr.w	r2, [r1, r2, lsl #2]
 80002e4:	3202      	adds	r2, #2
 80002e6:	2101      	movs	r1, #1
 80002e8:	4091      	lsls	r1, r2
 80002ea:	486a      	ldr	r0, [pc, #424]	@ (8000494 <gpio_config_pin+0x1ec>)
 80002ec:	68ba      	ldr	r2, [r7, #8]
 80002ee:	f850 2022 	ldr.w	r2, [r0, r2, lsl #2]
 80002f2:	3203      	adds	r2, #3
 80002f4:	2001      	movs	r0, #1
 80002f6:	fa00 f202 	lsl.w	r2, r0, r2
 80002fa:	430a      	orrs	r2, r1
 80002fc:	43d2      	mvns	r2, r2
 80002fe:	401a      	ands	r2, r3
 8000300:	68fb      	ldr	r3, [r7, #12]
 8000302:	605a      	str	r2, [r3, #4]
		    break;
 8000304:	e0c1      	b.n	800048a <gpio_config_pin+0x1e2>
		   case GPIO_OPD | GPIO_FLOATINGIN:
		    pGPIOx->CRH &= ~( 1 << CNF_POS_BIT2);
 8000306:	68fb      	ldr	r3, [r7, #12]
 8000308:	685b      	ldr	r3, [r3, #4]
 800030a:	4962      	ldr	r1, [pc, #392]	@ (8000494 <gpio_config_pin+0x1ec>)
 800030c:	68ba      	ldr	r2, [r7, #8]
 800030e:	f851 2022 	ldr.w	r2, [r1, r2, lsl #2]
 8000312:	3203      	adds	r2, #3
 8000314:	2101      	movs	r1, #1
 8000316:	fa01 f202 	lsl.w	r2, r1, r2
 800031a:	43d2      	mvns	r2, r2
 800031c:	401a      	ands	r2, r3
 800031e:	68fb      	ldr	r3, [r7, #12]
 8000320:	605a      	str	r2, [r3, #4]
		    pGPIOx->CRH |= (1 << CNF_POS_BIT1);
 8000322:	68fb      	ldr	r3, [r7, #12]
 8000324:	685b      	ldr	r3, [r3, #4]
 8000326:	495b      	ldr	r1, [pc, #364]	@ (8000494 <gpio_config_pin+0x1ec>)
 8000328:	68ba      	ldr	r2, [r7, #8]
 800032a:	f851 2022 	ldr.w	r2, [r1, r2, lsl #2]
 800032e:	3202      	adds	r2, #2
 8000330:	2101      	movs	r1, #1
 8000332:	fa01 f202 	lsl.w	r2, r1, r2
 8000336:	431a      	orrs	r2, r3
 8000338:	68fb      	ldr	r3, [r7, #12]
 800033a:	605a      	str	r2, [r3, #4]
		    break;
 800033c:	e0a5      	b.n	800048a <gpio_config_pin+0x1e2>
		   case GPIO_AFPUPD | GPIO_INPUPD:
		   pGPIOx->CRH &= (1 << CNF_POS_BIT1);
 800033e:	68fb      	ldr	r3, [r7, #12]
 8000340:	685b      	ldr	r3, [r3, #4]
 8000342:	4954      	ldr	r1, [pc, #336]	@ (8000494 <gpio_config_pin+0x1ec>)
 8000344:	68ba      	ldr	r2, [r7, #8]
 8000346:	f851 2022 	ldr.w	r2, [r1, r2, lsl #2]
 800034a:	3202      	adds	r2, #2
 800034c:	2101      	movs	r1, #1
 800034e:	fa01 f202 	lsl.w	r2, r1, r2
 8000352:	401a      	ands	r2, r3
 8000354:	68fb      	ldr	r3, [r7, #12]
 8000356:	605a      	str	r2, [r3, #4]
		   pGPIOx->CRH |= ~( 1 << CNF_POS_BIT2);
 8000358:	68fb      	ldr	r3, [r7, #12]
 800035a:	685b      	ldr	r3, [r3, #4]
 800035c:	494d      	ldr	r1, [pc, #308]	@ (8000494 <gpio_config_pin+0x1ec>)
 800035e:	68ba      	ldr	r2, [r7, #8]
 8000360:	f851 2022 	ldr.w	r2, [r1, r2, lsl #2]
 8000364:	3203      	adds	r2, #3
 8000366:	2101      	movs	r1, #1
 8000368:	fa01 f202 	lsl.w	r2, r1, r2
 800036c:	43d2      	mvns	r2, r2
 800036e:	431a      	orrs	r2, r3
 8000370:	68fb      	ldr	r3, [r7, #12]
 8000372:	605a      	str	r2, [r3, #4]
		    break;
 8000374:	e089      	b.n	800048a <gpio_config_pin+0x1e2>
		   case GPIO_AFUOPD|GPIO_RESERVED:
		     pGPIOx->CRH |= ((1<< CNF_POS_BIT1)| (1<<CNF_POS_BIT2)) ;
 8000376:	68fb      	ldr	r3, [r7, #12]
 8000378:	685b      	ldr	r3, [r3, #4]
 800037a:	4946      	ldr	r1, [pc, #280]	@ (8000494 <gpio_config_pin+0x1ec>)
 800037c:	68ba      	ldr	r2, [r7, #8]
 800037e:	f851 2022 	ldr.w	r2, [r1, r2, lsl #2]
 8000382:	3202      	adds	r2, #2
 8000384:	2101      	movs	r1, #1
 8000386:	4091      	lsls	r1, r2
 8000388:	4842      	ldr	r0, [pc, #264]	@ (8000494 <gpio_config_pin+0x1ec>)
 800038a:	68ba      	ldr	r2, [r7, #8]
 800038c:	f850 2022 	ldr.w	r2, [r0, r2, lsl #2]
 8000390:	3203      	adds	r2, #3
 8000392:	2001      	movs	r0, #1
 8000394:	fa00 f202 	lsl.w	r2, r0, r2
 8000398:	430a      	orrs	r2, r1
 800039a:	431a      	orrs	r2, r3
 800039c:	68fb      	ldr	r3, [r7, #12]
 800039e:	605a      	str	r2, [r3, #4]
		    break;
 80003a0:	e073      	b.n	800048a <gpio_config_pin+0x1e2>
		  }
	}
	else
	{
		switch(mode_type){
 80003a2:	687b      	ldr	r3, [r7, #4]
 80003a4:	2b03      	cmp	r3, #3
 80003a6:	d870      	bhi.n	800048a <gpio_config_pin+0x1e2>
 80003a8:	a201      	add	r2, pc, #4	@ (adr r2, 80003b0 <gpio_config_pin+0x108>)
 80003aa:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 80003ae:	bf00      	nop
 80003b0:	080003c1 	.word	0x080003c1
 80003b4:	080003ef 	.word	0x080003ef
 80003b8:	08000427 	.word	0x08000427
 80003bc:	0800045f 	.word	0x0800045f
				   case GPIO_PUPD | GPIO_ANALOGMODE:
				    pGPIOx->CRH &= ~((1 << CNF_POS_BIT1) | (1<<CNF_POS_BIT2));
 80003c0:	68fb      	ldr	r3, [r7, #12]
 80003c2:	685b      	ldr	r3, [r3, #4]
 80003c4:	4933      	ldr	r1, [pc, #204]	@ (8000494 <gpio_config_pin+0x1ec>)
 80003c6:	68ba      	ldr	r2, [r7, #8]
 80003c8:	f851 2022 	ldr.w	r2, [r1, r2, lsl #2]
 80003cc:	3202      	adds	r2, #2
 80003ce:	2101      	movs	r1, #1
 80003d0:	4091      	lsls	r1, r2
 80003d2:	4830      	ldr	r0, [pc, #192]	@ (8000494 <gpio_config_pin+0x1ec>)
 80003d4:	68ba      	ldr	r2, [r7, #8]
 80003d6:	f850 2022 	ldr.w	r2, [r0, r2, lsl #2]
 80003da:	3203      	adds	r2, #3
 80003dc:	2001      	movs	r0, #1
 80003de:	fa00 f202 	lsl.w	r2, r0, r2
 80003e2:	430a      	orrs	r2, r1
 80003e4:	43d2      	mvns	r2, r2
 80003e6:	401a      	ands	r2, r3
 80003e8:	68fb      	ldr	r3, [r7, #12]
 80003ea:	605a      	str	r2, [r3, #4]
				    break;
 80003ec:	e04d      	b.n	800048a <gpio_config_pin+0x1e2>
				   case GPIO_OPD | GPIO_FLOATINGIN:
				    pGPIOx->CRH &= ~( 1 << CNF_POS_BIT2);
 80003ee:	68fb      	ldr	r3, [r7, #12]
 80003f0:	685b      	ldr	r3, [r3, #4]
 80003f2:	4928      	ldr	r1, [pc, #160]	@ (8000494 <gpio_config_pin+0x1ec>)
 80003f4:	68ba      	ldr	r2, [r7, #8]
 80003f6:	f851 2022 	ldr.w	r2, [r1, r2, lsl #2]
 80003fa:	3203      	adds	r2, #3
 80003fc:	2101      	movs	r1, #1
 80003fe:	fa01 f202 	lsl.w	r2, r1, r2
 8000402:	43d2      	mvns	r2, r2
 8000404:	401a      	ands	r2, r3
 8000406:	68fb      	ldr	r3, [r7, #12]
 8000408:	605a      	str	r2, [r3, #4]
				    pGPIOx->CRH |= (1 << CNF_POS_BIT1);
 800040a:	68fb      	ldr	r3, [r7, #12]
 800040c:	685b      	ldr	r3, [r3, #4]
 800040e:	4921      	ldr	r1, [pc, #132]	@ (8000494 <gpio_config_pin+0x1ec>)
 8000410:	68ba      	ldr	r2, [r7, #8]
 8000412:	f851 2022 	ldr.w	r2, [r1, r2, lsl #2]
 8000416:	3202      	adds	r2, #2
 8000418:	2101      	movs	r1, #1
 800041a:	fa01 f202 	lsl.w	r2, r1, r2
 800041e:	431a      	orrs	r2, r3
 8000420:	68fb      	ldr	r3, [r7, #12]
 8000422:	605a      	str	r2, [r3, #4]
				    break;
 8000424:	e031      	b.n	800048a <gpio_config_pin+0x1e2>
				   case GPIO_AFPUPD | GPIO_INPUPD:
				   pGPIOx->CRH &= (1 << CNF_POS_BIT1);
 8000426:	68fb      	ldr	r3, [r7, #12]
 8000428:	685b      	ldr	r3, [r3, #4]
 800042a:	491a      	ldr	r1, [pc, #104]	@ (8000494 <gpio_config_pin+0x1ec>)
 800042c:	68ba      	ldr	r2, [r7, #8]
 800042e:	f851 2022 	ldr.w	r2, [r1, r2, lsl #2]
 8000432:	3202      	adds	r2, #2
 8000434:	2101      	movs	r1, #1
 8000436:	fa01 f202 	lsl.w	r2, r1, r2
 800043a:	401a      	ands	r2, r3
 800043c:	68fb      	ldr	r3, [r7, #12]
 800043e:	605a      	str	r2, [r3, #4]
				   pGPIOx->CRH |= ~( 1 << CNF_POS_BIT2);
 8000440:	68fb      	ldr	r3, [r7, #12]
 8000442:	685b      	ldr	r3, [r3, #4]
 8000444:	4913      	ldr	r1, [pc, #76]	@ (8000494 <gpio_config_pin+0x1ec>)
 8000446:	68ba      	ldr	r2, [r7, #8]
 8000448:	f851 2022 	ldr.w	r2, [r1, r2, lsl #2]
 800044c:	3203      	adds	r2, #3
 800044e:	2101      	movs	r1, #1
 8000450:	fa01 f202 	lsl.w	r2, r1, r2
 8000454:	43d2      	mvns	r2, r2
 8000456:	431a      	orrs	r2, r3
 8000458:	68fb      	ldr	r3, [r7, #12]
 800045a:	605a      	str	r2, [r3, #4]
				    break;
 800045c:	e015      	b.n	800048a <gpio_config_pin+0x1e2>
				   case GPIO_AFUOPD|GPIO_RESERVED:
				     pGPIOx->CRH |= ((1<< CNF_POS_BIT1)| (1<<CNF_POS_BIT2)) ;
 800045e:	68fb      	ldr	r3, [r7, #12]
 8000460:	685b      	ldr	r3, [r3, #4]
 8000462:	490c      	ldr	r1, [pc, #48]	@ (8000494 <gpio_config_pin+0x1ec>)
 8000464:	68ba      	ldr	r2, [r7, #8]
 8000466:	f851 2022 	ldr.w	r2, [r1, r2, lsl #2]
 800046a:	3202      	adds	r2, #2
 800046c:	2101      	movs	r1, #1
 800046e:	4091      	lsls	r1, r2
 8000470:	4808      	ldr	r0, [pc, #32]	@ (8000494 <gpio_config_pin+0x1ec>)
 8000472:	68ba      	ldr	r2, [r7, #8]
 8000474:	f850 2022 	ldr.w	r2, [r0, r2, lsl #2]
 8000478:	3203      	adds	r2, #3
 800047a:	2001      	movs	r0, #1
 800047c:	fa00 f202 	lsl.w	r2, r0, r2
 8000480:	430a      	orrs	r2, r1
 8000482:	431a      	orrs	r2, r3
 8000484:	68fb      	ldr	r3, [r7, #12]
 8000486:	605a      	str	r2, [r3, #4]
				    break;
 8000488:	bf00      	nop
				  }
	}
}
 800048a:	bf00      	nop
 800048c:	3714      	adds	r7, #20
 800048e:	46bd      	mov	sp, r7
 8000490:	bc80      	pop	{r7}
 8000492:	4770      	bx	lr
 8000494:	20000000 	.word	0x20000000

08000498 <gpio_config_pin_speed>:

void gpio_config_pin_speed (GPIO_RegDef_t *pGPIOx, uint32_t pinNumber, uint32_t pinSpeed, uint32_t mode)
{
 8000498:	b480      	push	{r7}
 800049a:	b085      	sub	sp, #20
 800049c:	af00      	add	r7, sp, #0
 800049e:	60f8      	str	r0, [r7, #12]
 80004a0:	60b9      	str	r1, [r7, #8]
 80004a2:	607a      	str	r2, [r7, #4]
 80004a4:	603b      	str	r3, [r7, #0]

 if(pinNumber >= 8)
 80004a6:	68bb      	ldr	r3, [r7, #8]
 80004a8:	2b07      	cmp	r3, #7
 80004aa:	d921      	bls.n	80004f0 <gpio_config_pin_speed+0x58>
 {
  if(mode == INPUT_MODE)
 80004ac:	683b      	ldr	r3, [r7, #0]
 80004ae:	2b02      	cmp	r3, #2
 80004b0:	d115      	bne.n	80004de <gpio_config_pin_speed+0x46>
   pGPIOx->CRH &= ~ (1 << (PINPOS[pinNumber]) |  1 << (PINPOS[pinNumber] +1) );
 80004b2:	68fb      	ldr	r3, [r7, #12]
 80004b4:	685b      	ldr	r3, [r3, #4]
 80004b6:	4923      	ldr	r1, [pc, #140]	@ (8000544 <gpio_config_pin_speed+0xac>)
 80004b8:	68ba      	ldr	r2, [r7, #8]
 80004ba:	f851 2022 	ldr.w	r2, [r1, r2, lsl #2]
 80004be:	2101      	movs	r1, #1
 80004c0:	4091      	lsls	r1, r2
 80004c2:	4820      	ldr	r0, [pc, #128]	@ (8000544 <gpio_config_pin_speed+0xac>)
 80004c4:	68ba      	ldr	r2, [r7, #8]
 80004c6:	f850 2022 	ldr.w	r2, [r0, r2, lsl #2]
 80004ca:	3201      	adds	r2, #1
 80004cc:	2001      	movs	r0, #1
 80004ce:	fa00 f202 	lsl.w	r2, r0, r2
 80004d2:	430a      	orrs	r2, r1
 80004d4:	43d2      	mvns	r2, r2
 80004d6:	401a      	ands	r2, r3
 80004d8:	68fb      	ldr	r3, [r7, #12]
 80004da:	605a      	str	r2, [r3, #4]
   pGPIOx->CRL &= ~ (1 << (PINPOS[pinNumber]) |  1 << (PINPOS[pinNumber] +1) );
  else
   pGPIOx->CRL |= (pinSpeed << (PINPOS[pinNumber]));
 }

}
 80004dc:	e02d      	b.n	800053a <gpio_config_pin_speed+0xa2>
   pGPIOx->CRH = (pinSpeed << (PINPOS[pinNumber]));
 80004de:	4a19      	ldr	r2, [pc, #100]	@ (8000544 <gpio_config_pin_speed+0xac>)
 80004e0:	68bb      	ldr	r3, [r7, #8]
 80004e2:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 80004e6:	687a      	ldr	r2, [r7, #4]
 80004e8:	409a      	lsls	r2, r3
 80004ea:	68fb      	ldr	r3, [r7, #12]
 80004ec:	605a      	str	r2, [r3, #4]
}
 80004ee:	e024      	b.n	800053a <gpio_config_pin_speed+0xa2>
  if(mode == INPUT_MODE)
 80004f0:	683b      	ldr	r3, [r7, #0]
 80004f2:	2b02      	cmp	r3, #2
 80004f4:	d115      	bne.n	8000522 <gpio_config_pin_speed+0x8a>
   pGPIOx->CRL &= ~ (1 << (PINPOS[pinNumber]) |  1 << (PINPOS[pinNumber] +1) );
 80004f6:	68fb      	ldr	r3, [r7, #12]
 80004f8:	681b      	ldr	r3, [r3, #0]
 80004fa:	4912      	ldr	r1, [pc, #72]	@ (8000544 <gpio_config_pin_speed+0xac>)
 80004fc:	68ba      	ldr	r2, [r7, #8]
 80004fe:	f851 2022 	ldr.w	r2, [r1, r2, lsl #2]
 8000502:	2101      	movs	r1, #1
 8000504:	4091      	lsls	r1, r2
 8000506:	480f      	ldr	r0, [pc, #60]	@ (8000544 <gpio_config_pin_speed+0xac>)
 8000508:	68ba      	ldr	r2, [r7, #8]
 800050a:	f850 2022 	ldr.w	r2, [r0, r2, lsl #2]
 800050e:	3201      	adds	r2, #1
 8000510:	2001      	movs	r0, #1
 8000512:	fa00 f202 	lsl.w	r2, r0, r2
 8000516:	430a      	orrs	r2, r1
 8000518:	43d2      	mvns	r2, r2
 800051a:	401a      	ands	r2, r3
 800051c:	68fb      	ldr	r3, [r7, #12]
 800051e:	601a      	str	r2, [r3, #0]
}
 8000520:	e00b      	b.n	800053a <gpio_config_pin_speed+0xa2>
   pGPIOx->CRL |= (pinSpeed << (PINPOS[pinNumber]));
 8000522:	68fb      	ldr	r3, [r7, #12]
 8000524:	681a      	ldr	r2, [r3, #0]
 8000526:	4907      	ldr	r1, [pc, #28]	@ (8000544 <gpio_config_pin_speed+0xac>)
 8000528:	68bb      	ldr	r3, [r7, #8]
 800052a:	f851 3023 	ldr.w	r3, [r1, r3, lsl #2]
 800052e:	6879      	ldr	r1, [r7, #4]
 8000530:	fa01 f303 	lsl.w	r3, r1, r3
 8000534:	431a      	orrs	r2, r3
 8000536:	68fb      	ldr	r3, [r7, #12]
 8000538:	601a      	str	r2, [r3, #0]
}
 800053a:	bf00      	nop
 800053c:	3714      	adds	r7, #20
 800053e:	46bd      	mov	sp, r7
 8000540:	bc80      	pop	{r7}
 8000542:	4770      	bx	lr
 8000544:	20000000 	.word	0x20000000

08000548 <main>:
#include "../Drivers/Inc/GPIO_Driver.h"



int main(void)
{
 8000548:	b580      	push	{r7, lr}
 800054a:	af00      	add	r7, sp, #0
	 	gpio_init(GPIOA,ENABLE);
 800054c:	2101      	movs	r1, #1
 800054e:	4807      	ldr	r0, [pc, #28]	@ (800056c <main+0x24>)
 8000550:	f7ff fe0e 	bl	8000170 <gpio_init>
	 	gpio_config_pin(GPIOA,GPIO_PIN_NO_0 , GPIO_ANALOGMODE);
 8000554:	2200      	movs	r2, #0
 8000556:	2100      	movs	r1, #0
 8000558:	4804      	ldr	r0, [pc, #16]	@ (800056c <main+0x24>)
 800055a:	f7ff fea5 	bl	80002a8 <gpio_config_pin>
	 	gpio_init(GPIOA,DISABLE);
 800055e:	2100      	movs	r1, #0
 8000560:	4802      	ldr	r0, [pc, #8]	@ (800056c <main+0x24>)
 8000562:	f7ff fe05 	bl	8000170 <gpio_init>
	 	return 0;
 8000566:	2300      	movs	r3, #0
}
 8000568:	4618      	mov	r0, r3
 800056a:	bd80      	pop	{r7, pc}
 800056c:	40010800 	.word	0x40010800

08000570 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 8000570:	480d      	ldr	r0, [pc, #52]	@ (80005a8 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 8000572:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 8000574:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 8000578:	480c      	ldr	r0, [pc, #48]	@ (80005ac <LoopForever+0x6>)
  ldr r1, =_edata
 800057a:	490d      	ldr	r1, [pc, #52]	@ (80005b0 <LoopForever+0xa>)
  ldr r2, =_sidata
 800057c:	4a0d      	ldr	r2, [pc, #52]	@ (80005b4 <LoopForever+0xe>)
  movs r3, #0
 800057e:	2300      	movs	r3, #0
  b LoopCopyDataInit
 8000580:	e002      	b.n	8000588 <LoopCopyDataInit>

08000582 <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 8000582:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 8000584:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 8000586:	3304      	adds	r3, #4

08000588 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 8000588:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 800058a:	428c      	cmp	r4, r1
  bcc CopyDataInit
 800058c:	d3f9      	bcc.n	8000582 <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 800058e:	4a0a      	ldr	r2, [pc, #40]	@ (80005b8 <LoopForever+0x12>)
  ldr r4, =_ebss
 8000590:	4c0a      	ldr	r4, [pc, #40]	@ (80005bc <LoopForever+0x16>)
  movs r3, #0
 8000592:	2300      	movs	r3, #0
  b LoopFillZerobss
 8000594:	e001      	b.n	800059a <LoopFillZerobss>

08000596 <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 8000596:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 8000598:	3204      	adds	r2, #4

0800059a <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 800059a:	42a2      	cmp	r2, r4
  bcc FillZerobss
 800059c:	d3fb      	bcc.n	8000596 <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 800059e:	f000 f811 	bl	80005c4 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 80005a2:	f7ff ffd1 	bl	8000548 <main>

080005a6 <LoopForever>:

LoopForever:
  b LoopForever
 80005a6:	e7fe      	b.n	80005a6 <LoopForever>
  ldr   r0, =_estack
 80005a8:	20002800 	.word	0x20002800
  ldr r0, =_sdata
 80005ac:	20000000 	.word	0x20000000
  ldr r1, =_edata
 80005b0:	20000040 	.word	0x20000040
  ldr r2, =_sidata
 80005b4:	0800062c 	.word	0x0800062c
  ldr r2, =_sbss
 80005b8:	20000040 	.word	0x20000040
  ldr r4, =_ebss
 80005bc:	2000005c 	.word	0x2000005c

080005c0 <ADC1_2_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 80005c0:	e7fe      	b.n	80005c0 <ADC1_2_IRQHandler>
	...

080005c4 <__libc_init_array>:
 80005c4:	b570      	push	{r4, r5, r6, lr}
 80005c6:	2600      	movs	r6, #0
 80005c8:	4d0c      	ldr	r5, [pc, #48]	@ (80005fc <__libc_init_array+0x38>)
 80005ca:	4c0d      	ldr	r4, [pc, #52]	@ (8000600 <__libc_init_array+0x3c>)
 80005cc:	1b64      	subs	r4, r4, r5
 80005ce:	10a4      	asrs	r4, r4, #2
 80005d0:	42a6      	cmp	r6, r4
 80005d2:	d109      	bne.n	80005e8 <__libc_init_array+0x24>
 80005d4:	f000 f81a 	bl	800060c <_init>
 80005d8:	2600      	movs	r6, #0
 80005da:	4d0a      	ldr	r5, [pc, #40]	@ (8000604 <__libc_init_array+0x40>)
 80005dc:	4c0a      	ldr	r4, [pc, #40]	@ (8000608 <__libc_init_array+0x44>)
 80005de:	1b64      	subs	r4, r4, r5
 80005e0:	10a4      	asrs	r4, r4, #2
 80005e2:	42a6      	cmp	r6, r4
 80005e4:	d105      	bne.n	80005f2 <__libc_init_array+0x2e>
 80005e6:	bd70      	pop	{r4, r5, r6, pc}
 80005e8:	f855 3b04 	ldr.w	r3, [r5], #4
 80005ec:	4798      	blx	r3
 80005ee:	3601      	adds	r6, #1
 80005f0:	e7ee      	b.n	80005d0 <__libc_init_array+0xc>
 80005f2:	f855 3b04 	ldr.w	r3, [r5], #4
 80005f6:	4798      	blx	r3
 80005f8:	3601      	adds	r6, #1
 80005fa:	e7f2      	b.n	80005e2 <__libc_init_array+0x1e>
 80005fc:	08000624 	.word	0x08000624
 8000600:	08000624 	.word	0x08000624
 8000604:	08000624 	.word	0x08000624
 8000608:	08000628 	.word	0x08000628

0800060c <_init>:
 800060c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800060e:	bf00      	nop
 8000610:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8000612:	bc08      	pop	{r3}
 8000614:	469e      	mov	lr, r3
 8000616:	4770      	bx	lr

08000618 <_fini>:
 8000618:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800061a:	bf00      	nop
 800061c:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800061e:	bc08      	pop	{r3}
 8000620:	469e      	mov	lr, r3
 8000622:	4770      	bx	lr
